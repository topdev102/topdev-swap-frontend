{"version":3,"sources":["views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","views/Ifos/hooks/useGetPublicIfoData.ts","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/hooks/useGetWalletIfoData.ts","components/Input/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/PercentageOfTotal.tsx","views/Ifos/components/IfoCard/Contribute.tsx","views/Ifos/components/IfoCard/MetaLabel.tsx","views/Ifos/components/IfoCard/BalanceInUsd.tsx","views/Ifos/components/IfoCard/Claim.tsx","views/Ifos/components/IfoCard/ActiveSkeleton.tsx","views/Ifos/components/IfoCard/InactiveSkeleton.tsx","views/Ifos/components/IfoCard/IfoCardActions.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/Title.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","hooks/useTokenBalance.ts","views/Profile/components/ApproveConfirmButtons.tsx","hooks/useApproveConfirmTransaction.ts","hooks/useAllowance.ts","utils/getTimePeriods.ts"],"names":["Wrapper","styled","div","IfoTabButtons","useRouteMatch","url","isExact","activeIndex","size","variant","as","Link","to","Title","Heading","attrs","theme","colors","secondary","Blurb","Text","StyledHero","Hero","TranslateString","useI18n","Container","getStatus","currentBlock","startBlock","endBlock","useGetPublicIfoData","ifo","address","releaseBlockNumber","useState","status","blocksRemaining","secondsUntilStart","progress","secondsUntilEnd","raisingAmount","BigNumber","totalAmount","startBlockNum","endBlockNum","state","setState","useBlock","contract","useIfoContract","useEffect","a","makeBatchRequest","methods","call","parseInt","totalBlocks","BSC_BLOCK_TIME","fetchProgress","StyledIfoCardHeader","Flex","Name","Description","textSubtle","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","width","height","Item","Display","IfoCardDetails","publicIfoData","isOpen","setIsOpen","description","cakeToBurn","projectSiteUrl","launchDate","launchTime","saleAmount","raiseAmount","onClick","fullWidth","endIcon","color","my","href","target","rel","ml","style","display","times","toFixed","margin","useGetWalletIfoData","isPendingTx","offeringTokenBalance","refundingAmount","userInfo","amount","claimed","currencyAddress","account","useWeb3React","currencyContract","useERC20","allowance","useIfoAllowance","getOfferingAmount","getRefundingAmount","offeringAmount","userInfoResponse","prevState","fetchIfoData","setPendingTx","addUserContributedAmount","plus","setIsClaimed","StyledBalanceInput","Box","input","radii","default","BalanceInput","title","max","symbol","onChange","onSelectMax","value","props","maxDisplay","justifyContent","fontSize","num","Input","endAdornment","mr","placeholder","ContributeModal","currency","onDismiss","onSuccess","setValue","raisingTokenContract","balance","getBalanceNumber","useTokenBalance","valueWithTokenDecimals","pow","useApproveConfirmTransaction","onRequiresApproval","options","response","currentAllowance","gt","onApprove","approve","ethers","constants","MaxUint256","send","from","onConfirm","deposit","toString","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","e","currentTarget","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","isNaN","eq","PercentageOfTotal","userAmount","percentofUserDisplay","toNumber","toLocaleString","undefined","maximumFractionDigits","Contribute","contributedBalance","toastSuccess","useToast","useModal","onPresentContributeModal","bold","textTransform","flex","pr","disabled","MetaLabel","children","minHeight","BalanceInUsd","token","priceInUsd","useGetApiPrice","hasBalance","total","minimumFractionDigits","AmountGrid","Claim","didContribute","canClaim","refundedBalance","tokenSymbol","tokenDecimals","rewardBalance","toastError","hasParticipated","handleClaim","harvest","message","console","error","isLoading","spin","mt","ActiveSkeleton","InactiveSkeleton","IfoCardActions","isActive","UnlockButton","IfoCardProgress","primaryStep","Details","Countdown","IfoCardTime","block","countdownToUse","timeUntil","getTimePeriods","suffix","days","hours","minutes","StyledIfoCard","Card","IfoCard","id","Ribbon","variantColor","text","getRibbonComponent","ribbon","IfoCardWrapper","mediaQueries","md","isSingle","defaultProps","LaunchIfoCallout","BaseLayout","sm","List","ul","activeIfo","ifosConfig","find","Ifo","IfoCards","pt","responsive","external","inactiveIfo","filter","PastIfo","map","Ifos","path","exact","CurrentIfo","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","useTotalSupply","slowRefresh","useRefresh","totalSupply","setTotalSupply","cakeContract","getCakeContract","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","setBalance","web3","useWeb3","getBep20Contract","balanceOf","res","fetchBalance","fastRefresh","Button","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","ChevronBottom","ChevronDownIcon","spinnerIcon","py","flexDirection","initialState","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","reducer","actions","type","payload","noop","useReducer","dispatch","handlePreApprove","useRef","current","then","result","on","useLotteryAllowance","setAllowance","useCake","fetchAllowance","getLotteryAddress","refreshInterval","setInterval","clearInterval","tokenContract","spenderAddress","dependency","fetch","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","seconds","delta","timeLeft","years","months","Math","floor"],"mappings":"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","file":"static/js/7.7c65de9c.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 39px;\n`\n\nconst IfoTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Next IFO\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          Past IFOs\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default IfoTabButtons\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport Container from 'components/layout/Container'\nimport useI18n from 'hooks/useI18n'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n  margin-bottom: 32px;\n`\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <Container>\n        <Title>{TranslateString(500, 'IFO: Initial Farm Offerings')}</Title>\n        <Blurb>{TranslateString(502, 'Buy new tokens with a brand new token sale model.')}</Blurb>\n      </Container>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import BigNumber from 'bignumber.js'\nimport { BSC_BLOCK_TIME } from 'config'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport useBlock from 'hooks/useBlock'\nimport { useIfoContract } from 'hooks/useContract'\nimport { useEffect, useState } from 'react'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nexport interface PublicIfoState {\n  status: IfoStatus\n  blocksRemaining: number\n  secondsUntilStart: number\n  progress: number\n  secondsUntilEnd: number\n  raisingAmount: BigNumber\n  totalAmount: BigNumber\n  startBlockNum: number\n  endBlockNum: number\n}\n\nconst getStatus = (currentBlock: number, startBlock: number, endBlock: number): IfoStatus => {\n  // Add an extra check to currentBlock because it takes awhile to fetch so the initial value is 0\n  // making the UI change to an inaccurate status\n  if (currentBlock === 0) {\n    return 'idle'\n  }\n\n  if (currentBlock < startBlock) {\n    return 'coming_soon'\n  }\n\n  if (currentBlock >= startBlock && currentBlock <= endBlock) {\n    return 'live'\n  }\n\n  if (currentBlock > endBlock) {\n    return 'finished'\n  }\n\n  return 'idle'\n}\n\n/**\n * Gets all public data of an IFO\n */\nconst useGetPublicIfoData = (ifo: Ifo) => {\n  const { address, releaseBlockNumber } = ifo\n  const [state, setState] = useState<PublicIfoState>({\n    status: 'idle',\n    blocksRemaining: 0,\n    secondsUntilStart: 0,\n    progress: 5,\n    secondsUntilEnd: 0,\n    raisingAmount: new BigNumber(0),\n    totalAmount: new BigNumber(0),\n    startBlockNum: 0,\n    endBlockNum: 0,\n  })\n  const currentBlock = useBlock()\n  const contract = useIfoContract(address)\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      const [startBlock, endBlock, raisingAmount, totalAmount] = (await makeBatchRequest([\n        contract.methods.startBlock().call,\n        contract.methods.endBlock().call,\n        contract.methods.raisingAmount().call,\n        contract.methods.totalAmount().call,\n      ])) as [string, string, string, string]\n\n      const startBlockNum = parseInt(startBlock, 10)\n      const endBlockNum = parseInt(endBlock, 10)\n\n      const status = getStatus(currentBlock, startBlockNum, endBlockNum)\n      const totalBlocks = endBlockNum - startBlockNum\n      const blocksRemaining = endBlockNum - currentBlock\n\n      // Calculate the total progress until finished or until start\n      const progress =\n        currentBlock > startBlockNum\n          ? ((currentBlock - startBlockNum) / totalBlocks) * 100\n          : ((currentBlock - releaseBlockNumber) / (startBlockNum - releaseBlockNumber)) * 100\n\n      setState({\n        secondsUntilEnd: blocksRemaining * BSC_BLOCK_TIME,\n        secondsUntilStart: (startBlockNum - currentBlock) * BSC_BLOCK_TIME,\n        raisingAmount: new BigNumber(raisingAmount),\n        totalAmount: new BigNumber(totalAmount),\n        status,\n        progress,\n        blocksRemaining,\n        startBlockNum,\n        endBlockNum,\n      })\n    }\n\n    fetchProgress()\n  }, [address, currentBlock, contract, releaseBlockNumber, setState])\n\n  return state\n}\n\nexport default useGetPublicIfoData\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Flex } from '@pancakeswap-libs/uikit'\n\ninterface IfoCardHeaderProps {\n  ifoId: string\n  name: string\n  subTitle: string\n}\n\nconst StyledIfoCardHeader = styled(Flex)`\n  & > div {\n    flex: 1;\n  }\n`\n\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\n  margin-bottom: 4px;\n  text-align: right;\n`\n\nconst Description = styled(Text)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  text-align: right;\n`\n\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\n  return (\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\n      <img src={`/images/ifos/${ifoId}.svg`} alt={ifoId} width=\"64px\" height=\"64px\" />\n      <div>\n        <Name>{name}</Name>\n        <Description>{subTitle}</Description>\n      </div>\n    </StyledIfoCardHeader>\n  )\n}\n\nexport default IfoCardHeader\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Text,\n  LinkExternal,\n  Link,\n  Box,\n  CardFooter,\n  Button,\n  ChevronDownIcon,\n  ChevronUpIcon,\n} from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { Ifo } from 'config/constants/types'\nimport { PublicIfoState } from '../../hooks/useGetPublicIfoData'\n\nexport interface IfoCardDetailsProps {\n  ifo: Ifo\n  publicIfoData: PublicIfoState\n}\n\nconst Item = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  display: flex;\n`\n\nconst Display = styled(Text)`\n  flex: 1;\n`\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({ ifo, publicIfoData }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const { description, cakeToBurn, projectSiteUrl, launchDate, launchTime, saleAmount, raiseAmount } = ifo\n  const { raisingAmount, totalAmount } = publicIfoData\n  const handleToggle = () => setIsOpen(!isOpen)\n\n  return (\n    <CardFooter>\n      <Button\n        variant=\"text\"\n        onClick={handleToggle}\n        fullWidth\n        endIcon={\n          isOpen ? <ChevronUpIcon color=\"primary\" width=\"24px\" /> : <ChevronDownIcon color=\"primary\" width=\"24px\" />\n        }\n      >\n        {isOpen ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\n      </Button>\n      {isOpen && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" my=\"24px\">\n            {description}\n          </Text>\n          <Box mb=\"24px\">\n            <Item>\n              <Display>{TranslateString(582, 'Launch Time')}</Display>\n              <Text>\n                {launchDate},\n                <Link\n                  href=\"https://www.timeanddate.com/worldclock/singapore/singapore\"\n                  target=\"blank\"\n                  rel=\"noopener noreferrer\"\n                  ml=\"4px\"\n                  style={{ display: 'inline' }}\n                >\n                  {launchTime}\n                </Link>\n              </Text>\n            </Item>\n            <Item>\n              <Display>{TranslateString(584, 'For Sale')}</Display>\n              <Text>{saleAmount}</Text>\n            </Item>\n            <Item>\n              <Display>{TranslateString(999, 'To raise (USD)')}</Display>\n              <Text>{raiseAmount}</Text>\n            </Item>\n            <Item>\n              <Display>{TranslateString(586, 'CAKE to burn (USD)')}</Display>\n              <Text>{cakeToBurn}</Text>\n            </Item>\n            <Item>\n              <Display>{TranslateString(999, 'Total raised (% of target)')}</Display>\n              <Text>{`${totalAmount.div(raisingAmount).times(100).toFixed(2)}%`}</Text>\n            </Item>\n          </Box>\n          <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\n            {TranslateString(412, 'View project site')}\n          </LinkExternal>\n        </>\n      )}\n    </CardFooter>\n  )\n}\n\nexport default IfoCardDetails\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { Ifo } from 'config/constants/types'\nimport { useERC20, useIfoContract } from 'hooks/useContract'\nimport { useIfoAllowance } from 'hooks/useAllowance'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nexport interface UserInfo {\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface WalletIfoState {\n  isPendingTx: boolean\n  offeringTokenBalance: BigNumber\n  refundingAmount: BigNumber\n  userInfo: UserInfo\n}\n\n/**\n * Gets all data from an IFO related to a wallet\n */\nconst useGetWalletIfoData = (ifo: Ifo) => {\n  const [state, setState] = useState<WalletIfoState>({\n    isPendingTx: false,\n    offeringTokenBalance: new BigNumber(0),\n    refundingAmount: new BigNumber(0),\n    userInfo: {\n      amount: new BigNumber(0),\n      claimed: false,\n    },\n  })\n\n  const { address, currencyAddress } = ifo\n  const { isPendingTx } = state\n\n  const { account } = useWeb3React()\n  const contract = useIfoContract(address)\n  const currencyContract = useERC20(currencyAddress)\n  const allowance = useIfoAllowance(currencyContract, address, isPendingTx)\n\n  const setPendingTx = (status: boolean) =>\n    setState((prevState) => ({\n      ...prevState,\n      isPendingTx: status,\n    }))\n\n  const addUserContributedAmount = (amount: BigNumber) => {\n    setState((prevState) => ({\n      ...prevState,\n      userInfo: {\n        ...prevState.userInfo,\n        amount: prevState.userInfo.amount.plus(amount),\n      },\n    }))\n  }\n\n  const setIsClaimed = () => {\n    setState((prevState) => ({\n      ...prevState,\n      userInfo: {\n        ...prevState.userInfo,\n        claimed: true,\n      },\n    }))\n  }\n\n  useEffect(() => {\n    const fetchIfoData = async () => {\n      const [offeringAmount, userInfoResponse, refundingAmount] = (await makeBatchRequest([\n        contract.methods.getOfferingAmount(account).call,\n        contract.methods.userInfo(account).call,\n        contract.methods.getRefundingAmount(account).call,\n      ])) as [string, UserInfo, string]\n\n      setState((prevState) => ({\n        ...prevState,\n        offeringTokenBalance: new BigNumber(offeringAmount),\n        refundingAmount: new BigNumber(refundingAmount),\n        userInfo: {\n          amount: new BigNumber(userInfoResponse.amount),\n          claimed: userInfoResponse.claimed,\n        },\n      }))\n    }\n\n    if (account) {\n      fetchIfoData()\n    }\n  }, [account, contract, setState])\n\n  return { ...state, allowance, contract, setPendingTx, addUserContributedAmount, setIsClaimed }\n}\n\nexport default useGetWalletIfoData\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Box, BoxProps, Flex, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Input from './Input'\n\ninterface BalanceInputProps extends BoxProps {\n  title: string\n  max: number\n  symbol: string\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n  value: string\n  onSelectMax?: () => void\n}\n\nconst StyledBalanceInput = styled(Box)`\n  background: ${({ theme }) => theme.colors.input};\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.2) inset;\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 8px 16px;\n`\n\nconst BalanceInput: React.FC<BalanceInputProps> = ({ title, max, symbol, onChange, onSelectMax, value, ...props }) => {\n  const TranslateString = useI18n()\n  const maxDisplay = max.toFixed(6)\n\n  return (\n    <StyledBalanceInput {...props}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text fontSize=\"14px\">{title}</Text>\n        <Text fontSize=\"14px\">{TranslateString(999, `Balance: ${maxDisplay}`, { num: maxDisplay })}</Text>\n      </Flex>\n      <Input\n        endAdornment={\n          <Flex alignItems=\"center\">\n            {onSelectMax && (\n              <Button size=\"sm\" onClick={onSelectMax} mr=\"8px\">\n                {TranslateString(452, 'Max')}\n              </Button>\n            )}\n            <Text>{symbol}</Text>\n          </Flex>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledBalanceInput>\n  )\n}\n\nexport default BalanceInput\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { Modal, LinkExternal, Box } from '@pancakeswap-libs/uikit'\nimport BalanceInput from 'components/Input/BalanceInput'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport ApproveConfirmButtons from 'views/Profile/components/ApproveConfirmButtons'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useERC20 } from 'hooks/useContract'\n\ninterface Props {\n  currency: string\n  contract: any\n  currencyAddress: string\n  onSuccess: (amount: BigNumber) => void\n  onDismiss?: () => void\n}\n\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss, onSuccess }) => {\n  const [value, setValue] = useState('')\n  const { account } = useWeb3React()\n  const raisingTokenContract = useERC20(currencyAddress)\n  const balance = getBalanceNumber(useTokenBalance(currencyAddress))\n  const TranslateString = useI18n()\n  const valueWithTokenDecimals = new BigNumber(value).times(new BigNumber(10).pow(18))\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await raisingTokenContract.methods.allowance(account, contract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gt(0)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return raisingTokenContract.methods\n        .approve(contract.options.address, ethers.constants.MaxUint256)\n        .send({ from: account })\n    },\n    onConfirm: () => {\n      return contract.methods.deposit(valueWithTokenDecimals.toString()).send({ from: account })\n    },\n    onSuccess: async () => {\n      onDismiss()\n      onSuccess(valueWithTokenDecimals)\n    },\n  })\n\n  return (\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\n      <Box width=\"344px\">\n        <BalanceInput\n          title={TranslateString(999, 'Contribute')}\n          value={value}\n          onChange={(e) => setValue(e.currentTarget.value)}\n          symbol={currency}\n          max={balance}\n          onSelectMax={() => setValue(balance.toString())}\n          mb=\"24px\"\n        />\n        <ApproveConfirmButtons\n          isApproveDisabled={isConfirmed || isConfirming || isApproved}\n          isApproving={isApproving}\n          isConfirmDisabled={\n            !isApproved || isConfirmed || valueWithTokenDecimals.isNaN() || valueWithTokenDecimals.eq(0)\n          }\n          isConfirming={isConfirming}\n          onApprove={handleApprove}\n          onConfirm={handleConfirm}\n        />\n        <LinkExternal\n          href=\"https://exchange.pancakeswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\n          style={{ margin: '16px auto 0' }}\n        >\n          {`Get ${currency}`}\n        </LinkExternal>\n      </Box>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport { UserInfo } from 'views/Ifos/hooks/useGetWalletIfoData'\nimport useI18n from 'hooks/useI18n'\n\ninterface PercentageOfTotalProps {\n  userAmount: UserInfo['amount']\n  raisingAmount: BigNumber\n}\n\nconst PercentageOfTotal: React.FC<PercentageOfTotalProps> = ({ userAmount, raisingAmount }) => {\n  const TranslateString = useI18n()\n  const percentOfUserContribution = userAmount.div(raisingAmount).times(100).toNumber()\n  const percentofUserDisplay = percentOfUserContribution.toLocaleString(undefined, { maximumFractionDigits: 2 })\n\n  return (\n    <Text fontSize=\"14px\" color=\"textSubtle\">\n      {TranslateString(999, `${percentofUserDisplay}% of total`, { num: percentofUserDisplay })}\n    </Text>\n  )\n}\n\nexport default PercentageOfTotal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'web3-eth-contract'\nimport { Box, Button, Flex, Text, useModal } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Ifo } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport { useToast } from 'state/hooks'\nimport { UserInfo } from '../../hooks/useGetWalletIfoData'\nimport { PublicIfoState } from '../../hooks/useGetPublicIfoData'\nimport ContributeModal from './ContributeModal'\nimport PercentageOfTotal from './PercentageOfTotal'\n\ninterface ContributeProps {\n  ifo: Ifo\n  contract: Contract\n  userInfo: UserInfo\n  isPendingTx: boolean\n  publicIfoData: PublicIfoState\n  addUserContributedAmount: (amount: BigNumber) => void\n}\nconst Contribute: React.FC<ContributeProps> = ({\n  ifo,\n  contract,\n  userInfo,\n  isPendingTx,\n  publicIfoData,\n  addUserContributedAmount,\n}) => {\n  const { currency, currencyAddress } = ifo\n  const { raisingAmount } = publicIfoData\n  const TranslateString = useI18n()\n  const contributedBalance = getBalanceNumber(userInfo.amount)\n  const { toastSuccess } = useToast()\n\n  const handleContributeSuccess = (amount: BigNumber) => {\n    toastSuccess('Success!', `You have contributed ${getBalanceNumber(amount)} CAKE-BNB LP tokens to this IFO!`)\n    addUserContributedAmount(amount)\n  }\n\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal\n      currency={currency}\n      contract={contract}\n      currencyAddress={currencyAddress}\n      onSuccess={handleContributeSuccess}\n    />,\n    false,\n  )\n\n  return (\n    <Box>\n      <Flex mb=\"4px\">\n        <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\n          CAKE-BNB LP\n        </Text>\n        <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n          Committed\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\">\n        <Box style={{ flex: 1 }} pr=\"8px\">\n          <Text bold fontSize=\"20px\">\n            {contributedBalance.toFixed(4)}\n          </Text>\n        </Box>\n        <Button onClick={onPresentContributeModal} disabled={isPendingTx}>\n          {TranslateString(999, 'Contribute')}\n        </Button>\n      </Flex>\n      <PercentageOfTotal userAmount={userInfo.amount} raisingAmount={raisingAmount} />\n    </Box>\n  )\n}\n\nexport default Contribute\n","import React from 'react'\nimport { Box, BoxProps, Text } from '@pancakeswap-libs/uikit'\n\ntype MetaLabel = BoxProps\n\nconst MetaLabel: React.FC<BoxProps> = ({ children, ...props }) => {\n  return (\n    <Box minHeight=\"18px\" {...props}>\n      <Text color=\"textSubtle\" fontSize=\"12px\">\n        {children}\n      </Text>\n    </Box>\n  )\n}\n\nexport default MetaLabel\n","import React from 'react'\nimport { useGetApiPrice } from 'state/hooks'\nimport MetaLabel from './MetaLabel'\n\ninterface BalanceInUsdProps {\n  token: string\n  balance: number\n}\n\nconst BalanceInUsd: React.FC<BalanceInUsdProps> = ({ token, balance }) => {\n  const priceInUsd = useGetApiPrice(token)\n  const hasBalance = !!priceInUsd && balance > 0\n  const total = priceInUsd * balance\n\n  return (\n    <MetaLabel>\n      {hasBalance && `~$${total.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`}\n    </MetaLabel>\n  )\n}\n\nexport default BalanceInUsd\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { AutoRenewIcon, Box, Button, Flex, Text } from '@pancakeswap-libs/uikit'\nimport { useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Ifo } from 'config/constants/types'\nimport { UserInfo, WalletIfoState } from '../../hooks/useGetWalletIfoData'\nimport BalanceInUsd from './BalanceInUsd'\nimport MetaLabel from './MetaLabel'\n\ninterface ClaimProps {\n  ifo: Ifo\n  contract: Contract\n  userInfo: UserInfo\n  isPendingTx: WalletIfoState['isPendingTx']\n  setPendingTx: (status: boolean) => void\n  offeringTokenBalance: WalletIfoState['offeringTokenBalance']\n  refundingAmount: WalletIfoState['refundingAmount']\n  setIsClaimed: () => void\n}\n\nconst AmountGrid = styled.div`\n  display: grid;\n  grid-gap: 8px;\n  grid-template-columns: repeat(2, 1fr);\n  margin-bottom: 24px;\n`\n\nconst DISPLAY_DECIMALS = 4\n\nconst Claim: React.FC<ClaimProps> = ({\n  ifo,\n  contract,\n  userInfo,\n  isPendingTx,\n  setPendingTx,\n  offeringTokenBalance,\n  refundingAmount,\n  setIsClaimed,\n}) => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const didContribute = userInfo.amount.gt(0)\n  const canClaim = !userInfo.claimed && offeringTokenBalance.gt(0)\n  const contributedBalance = getBalanceNumber(userInfo.amount)\n  const refundedBalance = getBalanceNumber(refundingAmount).toFixed(userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS)\n  const { tokenSymbol, tokenDecimals } = ifo\n  const rewardBalance = getBalanceNumber(offeringTokenBalance, tokenDecimals)\n  const { toastError, toastSuccess } = useToast()\n  const hasParticipated = offeringTokenBalance.gt(0)\n\n  const handleClaim = async () => {\n    try {\n      setPendingTx(true)\n      await contract.methods.harvest().send({ from: account })\n      setIsClaimed()\n      toastSuccess('Success!', 'You have successfully claimed your rewards.')\n    } catch (error) {\n      toastError('Error', error?.message)\n      console.error(error)\n    } finally {\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <>\n      <AmountGrid>\n        <Box>\n          <Flex mb=\"4px\">\n            <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\n              LP Tokens\n            </Text>\n            <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n              Committed\n            </Text>\n          </Flex>\n          <Text fontSize=\"20px\" bold color={offeringTokenBalance.gt(0) ? 'text' : 'textDisabled'}>\n            {contributedBalance.toFixed(userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS)}\n          </Text>\n          <MetaLabel>\n            {hasParticipated &&\n              canClaim &&\n              TranslateString(999, `${refundedBalance} to reclaim`, { num: refundedBalance })}\n            {hasParticipated &&\n              !canClaim &&\n              TranslateString(999, `${refundedBalance} reclaimed`, { num: refundedBalance })}\n          </MetaLabel>\n        </Box>\n        <Box>\n          <Flex mb=\"4px\">\n            <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\n              {tokenSymbol}\n            </Text>\n            {!canClaim && hasParticipated ? (\n              <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n                Claimed\n              </Text>\n            ) : (\n              <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n                To Claim\n              </Text>\n            )}\n          </Flex>\n          <Text fontSize=\"20px\" bold color={offeringTokenBalance.gt(0) ? 'text' : 'textDisabled'}>\n            {rewardBalance.toFixed(offeringTokenBalance.eq(0) ? 0 : DISPLAY_DECIMALS)}\n          </Text>\n          {canClaim && <BalanceInUsd token={tokenSymbol} balance={rewardBalance} />}\n        </Box>\n      </AmountGrid>\n      {didContribute ? (\n        <Button\n          onClick={handleClaim}\n          disabled={isPendingTx || !canClaim}\n          fullWidth\n          mb=\"24px\"\n          isLoading={isPendingTx}\n          endIcon={isPendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        >\n          {canClaim ? TranslateString(999, 'Claim') : TranslateString(999, 'Claimed')}\n        </Button>\n      ) : (\n        <Button disabled fullWidth mb=\"24px\">\n          {TranslateString(999, 'Nothing to Claim')}\n        </Button>\n      )}\n      <Text mt=\"4px\">{TranslateString(999, \"You'll be refunded any excess tokens when you claim\")}</Text>\n    </>\n  )\n}\n\nexport default Claim\n","import React from 'react'\nimport { Box, Skeleton } from '@pancakeswap-libs/uikit'\n\nconst ActiveSkeleton = () => (\n  <Box>\n    <Skeleton height=\"18px\" mb=\"4px\" width=\"30%\" />\n    <Skeleton height=\"48px\" mb=\"2px\" />\n    <Skeleton height=\"19px\" width=\"15%\" />\n  </Box>\n)\n\nexport default ActiveSkeleton\n","import React from 'react'\nimport { Box, Flex, Skeleton } from '@pancakeswap-libs/uikit'\n\nconst InactiveSkeleton = () => (\n  <>\n    <Flex mb=\"24px\">\n      <Box width=\"50%\" height=\"52px\">\n        <Skeleton height=\"18px\" mb=\"4px\" width=\"70%\" />\n        <Skeleton height=\"30px\" width=\"20%\" />\n      </Box>\n      <Box width=\"50%\" height=\"52px\">\n        <Skeleton height=\"18px\" mb=\"4px\" width=\"70%\" />\n        <Skeleton height=\"30px\" width=\"20%\" />\n      </Box>\n    </Flex>\n    <Skeleton height=\"48px\" mb=\"24px\" />\n    <Skeleton height=\"48px\" mt=\"4px\" />\n  </>\n)\n\nexport default InactiveSkeleton\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Ifo } from 'config/constants/types'\nimport UnlockButton from 'components/UnlockButton'\nimport { PublicIfoState } from 'views/Ifos/hooks/useGetPublicIfoData'\nimport useGetWalletIfoData from '../../hooks/useGetWalletIfoData'\nimport Contribute from './Contribute'\nimport Claim from './Claim'\nimport ActiveSkeleton from './ActiveSkeleton'\nimport InactiveSkeleton from './InactiveSkeleton'\n\nexport interface Props {\n  ifo: Ifo\n  publicIfoData: PublicIfoState\n}\n\nconst IfoCardActions: React.FC<Props> = ({ ifo, publicIfoData }) => {\n  const {\n    isPendingTx,\n    offeringTokenBalance,\n    refundingAmount,\n    userInfo,\n    contract,\n    setPendingTx,\n    addUserContributedAmount,\n    setIsClaimed,\n  } = useGetWalletIfoData(ifo)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <UnlockButton />\n  }\n\n  return (\n    <>\n      {ifo.isActive && publicIfoData.status === 'idle' && <ActiveSkeleton />}\n      {!ifo.isActive && publicIfoData.status === 'idle' && <InactiveSkeleton />}\n      {publicIfoData.status === 'live' && (\n        <Contribute\n          ifo={ifo}\n          contract={contract}\n          userInfo={userInfo}\n          isPendingTx={isPendingTx}\n          publicIfoData={publicIfoData}\n          addUserContributedAmount={addUserContributedAmount}\n        />\n      )}\n      {publicIfoData.status === 'finished' && (\n        <Claim\n          ifo={ifo}\n          contract={contract}\n          userInfo={userInfo}\n          isPendingTx={isPendingTx}\n          setPendingTx={setPendingTx}\n          offeringTokenBalance={offeringTokenBalance}\n          refundingAmount={refundingAmount}\n          setIsClaimed={setIsClaimed}\n        />\n      )}\n    </>\n  )\n}\n\nexport default IfoCardActions\n","import React from 'react'\nimport { Box, Progress } from '@pancakeswap-libs/uikit'\n\ninterface IfoCardProgressProps {\n  progress: number\n}\n\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\n  return (\n    <Box mb=\"16px\">\n      <Progress primaryStep={progress} />\n    </Box>\n  )\n}\n\nexport default IfoCardProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link } from '@pancakeswap-libs/uikit'\nimport { IfoStatus } from 'config/constants/types'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardTimeProps {\n  status: IfoStatus\n  secondsUntilStart: number\n  secondsUntilEnd: number\n  block: number\n}\n\nconst Details = styled.div`\n  align-items: center;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  margin-bottom: 24px;\n`\n\nconst Countdown = styled.div`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`\n\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({ status, secondsUntilStart, secondsUntilEnd, block }) => {\n  const TranslateString = useI18n()\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\n  const timeUntil = getTimePeriods(countdownToUse)\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\n\n  if (status === 'idle') {\n    return (\n      <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"24px\" height=\"24px\">\n        {TranslateString(656, 'Loading...')}\n      </Flex>\n    )\n  }\n\n  return (\n    <Details>\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\n      <Link href={`https://bscscan.com/block/countdown/${block}`} target=\"blank\" rel=\"noopener noreferrer\" ml=\"8px\">\n        (blocks)\n      </Link>\n    </Details>\n  )\n}\n\nexport default IfoCardTime\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardRibbon } from '@pancakeswap-libs/uikit'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\nimport useGetPublicIfoData from '../../hooks/useGetPublicIfoData'\nimport IfoCardHeader from './IfoCardHeader'\nimport IfoCardDetails from './IfoCardDetails'\nimport IfoCardActions from './IfoCardActions'\nimport IfoCardProgress from './IfoCardProgress'\nimport IfoCardTime from './IfoCardTime'\n\nexport interface IfoCardProps {\n  ifo: Ifo\n}\n\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\n  background-repeat: no-repeat;\n  background-size: contain;\n  padding-top: 112px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 437px;\n  width: 100%;\n`\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\n  }\n\n  return null\n}\n\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\n  const { id, name, subTitle } = ifo\n  const publicIfoData = useGetPublicIfoData(ifo)\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const Ribbon = getRibbonComponent(publicIfoData.status, TranslateString)\n\n  return (\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={publicIfoData.status === 'live'}>\n      <CardBody>\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\n        {publicIfoData.status !== 'finished' && ifo.isActive && (\n          <>\n            <IfoCardProgress progress={publicIfoData.progress} />\n            <IfoCardTime\n              status={publicIfoData.status}\n              secondsUntilStart={publicIfoData.secondsUntilStart}\n              secondsUntilEnd={publicIfoData.secondsUntilEnd}\n              block={publicIfoData.startBlockNum}\n            />\n          </>\n        )}\n        {account ? <IfoCardActions ifo={ifo} publicIfoData={publicIfoData} /> : <UnlockButton fullWidth />}\n      </CardBody>\n      <IfoCardDetails ifo={ifo} publicIfoData={publicIfoData} />\n    </StyledIfoCard>\n  )\n}\n\nexport default IfoCard\n","import styled from 'styled-components'\nimport { Heading } from '@pancakeswap-libs/uikit'\n\nconst Title = styled(Heading).attrs({ size: 'lg' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 16px;\n`\n\nexport default Title\n","import styled from 'styled-components'\n\ninterface IfoCardWrapperProps {\n  isSingle?: boolean\n}\n\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\n  align-items: start;\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\n  }\n`\n\nIfoCardWrapper.defaultProps = {\n  isSingle: false,\n}\n\nexport default IfoCardWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@pancakeswap-libs/uikit'\nimport { ifosConfig } from 'config/constants'\nimport useI18n from 'hooks/useI18n'\nimport IfoCard from './components/IfoCard'\nimport Title from './components/Title'\nimport IfoCards from './components/IfoCards'\n\nconst LaunchIfoCallout = styled(BaseLayout)`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst List = styled.ul`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n\n  & > li {\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n`\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\nconst Ifo = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <IfoCards isSingle>\n        <IfoCard ifo={activeIfo} />\n      </IfoCards>\n      <LaunchIfoCallout>\n        <div>\n          <Title as=\"h2\">{TranslateString(592, 'How to take part')}</Title>\n          <Heading mb=\"16px\">{TranslateString(594, 'Before Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(596, 'Buy CAKE and BNB tokens')}</li>\n            <li>{TranslateString(598, 'Get CAKE-BNB LP tokens by adding CAKE and BNB liquidity')}</li>\n          </List>\n          <Flex mb=\"16px\">\n            <LinkExternal href=\"https://exchange.pancakeswap.finance/#/swap\" mr=\"16px\">\n              {TranslateString(1060, 'Buy CAKE')}\n            </LinkExternal>\n            <LinkExternal href=\"https://exchange.pancakeswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\">\n              {TranslateString(1062, 'Get LP tokens')}\n            </LinkExternal>\n          </Flex>\n          <Heading mb=\"16px\">{TranslateString(600, 'During Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(602, 'While the sale is live, commit your CAKE-LP tokens to buy the IFO tokens')}</li>\n          </List>\n          <Heading mb=\"16px\">{TranslateString(604, 'After Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(606, 'Claim the tokens you bought, along with any unspent funds.')}</li>\n            <li>{TranslateString(608, 'Done!')}</li>\n          </List>\n          <Text as=\"div\" pt=\"16px\">\n            <Button\n              as=\"a\"\n              variant=\"secondary\"\n              href=\"https://docs.pancakeswap.finance/core-products/ifo-initial-farm-offering\"\n            >\n              {TranslateString(610, 'Read more')}\n            </Button>\n          </Text>\n        </div>\n        <div>\n          <Image src=\"/images/ifo-bunny.svg\" alt=\"ifo bunny\" width={436} height={406} responsive />\n          <div>\n            <Title as=\"h2\">{TranslateString(512, 'Want to launch your own IFO?')}</Title>\n            <Text mb={3}>\n              {TranslateString(\n                514,\n                'Launch your project with PancakeSwap, Binance Smart Chain’s most-used AMM project and liquidity provider, to bring your token directly to the most active and rapidly growing community on BSC.',\n              )}\n            </Text>\n            <Button\n              as=\"a\"\n              href=\"https://docs.google.com/forms/d/e/1FAIpQLScGdT5rrVMr4WOWr08pvcroSeuIOtEJf1sVdQGVdcAOqryigQ/viewform\"\n              external\n            >\n              {TranslateString(516, 'Apply to launch')}\n            </Button>\n          </div>\n        </div>\n      </LaunchIfoCallout>\n    </div>\n  )\n}\n\nexport default Ifo\n","import React from 'react'\nimport { ifosConfig } from 'config/constants'\nimport { Ifo } from 'config/constants/types'\nimport IfoCard from './components/IfoCard'\nimport IfoCards from './components/IfoCards'\n\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\n\nconst PastIfo = () => {\n  return (\n    <IfoCards>\n      {inactiveIfo.map((ifo) => (\n        <IfoCard key={ifo.id} ifo={ifo} />\n      ))}\n    </IfoCards>\n  )\n}\n\nexport default PastIfo\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport Container from 'components/layout/Container'\nimport IfoTabButtons from './components/IfoTabButtons'\nimport Hero from './components/Hero'\nimport CurrentIfo from './CurrentIfo'\nimport PastIfo from './PastIfo'\n\nconst Ifos = () => {\n  const { path } = useRouteMatch()\n\n  return (\n    <>\n      <Hero />\n      <Container>\n        <IfoTabButtons />\n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n        <Route path={`${path}/history`}>\n          <PastIfo />\n        </Route>\n      </Container>\n    </>\n  )\n}\n\nexport default Ifos\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, Flex, AutoRenewIcon, ChevronDownIcon } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n}\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n    width: auto;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Flex py=\"8px\" flexDirection={['column', null, 'row']} alignItems=\"center\">\n      <Button\n        disabled={isApproveDisabled}\n        onClick={onApprove}\n        endIcon={isApproving ? spinnerIcon : undefined}\n        isLoading={isApproving}\n      >\n        {isApproving ? TranslateString(800, 'Approving') : TranslateString(564, 'Approve')}\n      </Button>\n      <ChevronRight />\n      <ChevronBottom />\n      <Button\n        onClick={onConfirm}\n        disabled={isConfirmDisabled}\n        isLoading={isConfirming}\n        endIcon={isConfirming ? spinnerIcon : undefined}\n      >\n        {isConfirming ? TranslateString(802, 'Confirming') : TranslateString(464, 'Confirm')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveConfirmButtons\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\n\ntype Web3Payload = Record<string, unknown> | null\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt'; payload: Web3Payload }\n  | { type: 'approve_error'; payload: Web3Payload }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt'; payload: Web3Payload }\n  | { type: 'confirm_error'; payload: Web3Payload }\n\ninterface State {\n  approvalState: LoadingState\n  approvalReceipt: Web3Payload\n  approvalError: Web3Payload\n  confirmState: LoadingState\n  confirmReceipt: Web3Payload\n  confirmError: Web3Payload\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  approvalReceipt: null,\n  approvalError: null,\n  confirmState: 'idle',\n  confirmReceipt: null,\n  confirmError: null,\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n        approvalReceipt: actions.payload,\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n        approvalError: actions.payload,\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n        confirmReceipt: actions.payload,\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n        confirmError: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n\ntype ContractHandler = () => any\n\ninterface ApproveConfirmTransaction {\n  onApprove: ContractHandler\n  onConfirm: ContractHandler\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    approvalReceipt: state.approvalReceipt,\n    approvalError: state.approvalError,\n    confirmReceipt: state.confirmReceipt,\n    confirmError: state.confirmError,\n    handleApprove: () => {\n      onApprove()\n        .on('sending', () => {\n          dispatch({ type: 'approve_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'approve_receipt', payload })\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'approve_error', payload: error })\n          console.error('An error occurred approving transaction:', error)\n          toastError('An error occurred approving transaction')\n        })\n    },\n    handleConfirm: () => {\n      onConfirm()\n        .on('sending', () => {\n          dispatch({ type: 'confirm_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'confirm_receipt', payload })\n          onSuccess(state)\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'confirm_error', payload: error })\n          console.error('An error occurred confirming transaction:', error)\n          toastError('An error occurred confirming transaction')\n        })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport { useCake } from './useContract'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await cakeContract.methods.allowance(account, getLotteryAddress()).call()\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\n  const { account } = useWeb3React()\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n"],"sourceRoot":""}